clsDB.cls
VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "clsDB"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit

Private mPWD As String
Private mFILE As String
Private mTransStart As Boolean
Private mTopN As Long
Private mLastSQL As String
Private mConn As ADOdb.Connection
Private mCurrentUser As String

Private Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
Private Declare Function GetUserName Lib "advapi32.dll" Alias "GetUserNameA" (ByVal lpBuffer As String, nSize As Long) As Long


Property Get UserName() As String
    UserName = mCurrentUser
End Property

Property Get SQL() As String
    SQL = mLastSQL
End Property

Property Get topN() As Long
    topN = mTopN
End Property

Property Let topN(ByVal val As Long)
    mTopN = val
End Property

Property Let DataFile(ByVal val As String)
    mFILE = val
End Property

Property Get DataFile() As String
    DataFile = mFILE
End Property

Property Get Password() As String
    Password = mPWD
End Property

Property Let Password(ByVal val As String)
    mPWD = val
End Property

Public Sub CloseConnection()

'On Error Resume Next
    If mConn Is Nothing Then
        Exit Sub
    End If
    
    If mTransStart Then
        mConn.RollbackTrans
    End If
    
    If mConn.State <> 0 Then
        mConn.Close
    End If
    
    Set mConn = Nothing
    mTransStart = False
    
    Call Sleep(100)
End Sub

Public Sub Connect(Optional ByVal forceReconnect As Boolean = False)
    
    If Not (mConn Is Nothing) Then
        If mConn.State <> 0 Then
            If forceReconnect Then
                GoTo CONNECTING
            End If
            Exit Sub
        End If
    
    End If
    
CONNECTING:
'No error handle, throws all exception
    
    Call CloseConnection
    
    Set mConn = New ADOdb.Connection
    
    If UCase(FileExtention(mFILE)) = "CSV" Then
        mConn.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & FileDirectory(mFILE)
    ElseIf UCase(FileExtention(mFILE)) = "XLSX" Or UCase(FileExtention(mFILE)) = "XLSM" Then
        mConn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & mFILE
    ElseIf UCase(FileExtention(mFILE)) = "ACCDB" Then
        mConn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & mFILE
    Else
        mConn.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & mFILE
    End If
    
    If Trim(mPWD) <> "" Then
        mConn.ConnectionString = mConn.ConnectionString & ";Jet OLEDB:Database Password=" & Trim(mPWD)
    End If
    
    Select Case UCase(FileExtention(mFILE))
        Case "XLS"
            mConn.ConnectionString = mConn.ConnectionString & ";Extended Properties=""Excel 8.0;HDR=Yes;IMEX=1"""
        Case "XLSX", "XLSM"
            mConn.ConnectionString = mConn.ConnectionString & ";Extended Properties=""Excel 12.0;HDR=Yes;IMEX=1"""
        Case "CSV"
            mConn.ConnectionString = mConn.ConnectionString & ";Extended Properties=""text;HDR=Yes;FMT=Delimited;Format=TabDelimited;ColNameHeader=True;"""
    End Select
    
    
' 400 connection string
'    mConn.ConnectionString = "Provider=IBMDA400;Data Source=AS400-PFS-PROD-D.BOBSVR.HK.HSBC;Data Compression=True;Default Collection=BTQRYYLC;User Id=" & Trim(mUID) & ";Password=" & Trim(mPWD)
    
' csv connection string
'    mConn.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Extended Properties=""text;HDR=Yes;FMT=Delimited;Format=TabDelimited;ColNameHeader=True;"";Data Source=" & mFILE
    
' excel connection string
' mConn.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\MyExcel.xls;Extended Properties="Excel 8.0;HDR=Yes;IMEX=1";
    
    mConn.ConnectionTimeout = 30 '30 seconds, wait for 30 seconds to raise connection fail
    
    mConn.Open
    
End Sub


Public Sub GetStream()
'New ADODB.Stream
'Dim st As ADODB.Stream

'st.Open

End Sub

Public Sub BeginTrans()
    If mTransStart Then
        Err.Raise -999, "clsAccess.BeginTrans", "Transaction already started!"
        Exit Sub
    End If
    
    Connect
    mConn.BeginTrans
    
    mTransStart = True
End Sub

Public Sub Commit()
    mTransStart = False
    mConn.CommitTrans
End Sub

Public Sub Rollback()
    On Error Resume Next
    
    mConn.RollbackTrans
    mTransStart = False
    
    On Error GoTo 0
End Sub

Public Sub ResetRecordset(ByRef rs As ADOdb.Recordset)
    
    On Error Resume Next

    If Not rs Is Nothing Then
        Set rs.ActiveCommand = Nothing
        Set rs.ActiveConnection = Nothing
        
        rs.Close
        Set rs = Nothing
        
    End If

    On Error GoTo 0
    
End Sub

Public Sub GetTableNamesRecordset(ByRef rs As ADOdb.Recordset)
    
    Call ResetRecordset(rs)
    Connect
    Set rs = mConn.OpenSchema(adSchemaTables)
    
End Sub

Public Sub GetColumnsRecordset(ByRef rs As ADOdb.Recordset)
    
    Call ResetRecordset(rs)
    Connect
    Set rs = mConn.OpenSchema(adSchemaColumns)
    
End Sub


Public Sub GetRecordset(ByVal sqlStr As String, ByRef rs As ADOdb.Recordset, ParamArray paras() As Variant)

'No error handle, throws all exception
    Dim i As Integer
    Dim pos As Long

    Call ResetRecordset(rs)
    Set rs = New ADOdb.Recordset
    
    rs.CursorLocation = adUseClient
    'rs.CursorType = adOpenForwardOnly
    
    If topN > 0 Then
        If InStr(1, UCase(sqlStr), " TOP ") < 1 Then
            sqlStr = "SELECT TOP " & topN & " " & Mid(sqlStr, InStr(1, UCase(sqlStr), "SELECT") + 6)
        End If
    'topN
    
' used for 400 query
'        If InStr(UCase(sqlStr), "FETCH FIRST") < 1 Then
'            sqlStr = sqlStr & vbCrLf & " FETCH FIRST " & topN & " ROWS ONLY "
'        End If
        
'        If InStr(UCase(sqlStr), "OPTIMIZE FOR") < 1 Then
'            sqlStr = sqlStr & vbCrLf & " OPTIMIZE FOR " & topN & " ROWS "
'        End If
    
    End If
    
    pos = 0
        
    If IsArray(paras) Then
        For i = 0 To UBound(paras)
            pos = InStr(pos + 1, sqlStr, "?")
            
            If pos > 0 Then
                sqlStr = Left(sqlStr, pos - 1) & Replace(paras(i), "'", "''") & Mid(sqlStr, pos + 1)
            End If
        Next i
    End If
    
    
    Connect
    
    mLastSQL = sqlStr

    rs.Open sqlStr, mConn
        
    'Set rs.ActiveCommand = Nothing
    Set rs.ActiveConnection = Nothing
    
End Sub

Public Sub GetRecordsetForUpdate(ByVal sqlStr As String, ByRef rs As ADOdb.Recordset, ParamArray paras() As Variant)
    Dim i As Integer
    Dim pos As Long
    
    Call ResetRecordset(rs)
    Set rs = New ADOdb.Recordset
    
    rs.CursorLocation = adUseServer
    
    rs.LockType = adLockOptimistic
'    rs.CursorType = adOpenForwardOnly
    
    'adCmdTable, gConnect_Main, adUseServer, adOpenForwardOnly
    
    'rs.CursorType = adOpenForwardOnly
    pos = 0
        
    If IsArray(paras) Then
        For i = 0 To UBound(paras)
            pos = InStr(pos + 1, sqlStr, "?")
            
            If pos > 0 Then
                sqlStr = Left(sqlStr, pos - 1) & Replace(paras(i), "'", "''") & Mid(sqlStr, pos + 1)
            End If
        Next i
    End If
    
    
    
    Connect
    
    mLastSQL = sqlStr

    rs.Open sqlStr, mConn ', Options:=adCmdTable
    
End Sub

Public Sub ExecuteSQL(ByVal sqlStr As String, ParamArray paras() As Variant)
    Dim i As Integer
    Dim pos As Long
    
    Dim cmd As New ADOdb.Command
    
    pos = 0
        
    If IsArray(paras) Then
        For i = 0 To UBound(paras)
            pos = InStr(pos + 1, sqlStr, "?")
            
            If pos > 0 Then
                sqlStr = Left(sqlStr, pos - 1) & Replace(paras(i), "'", "''") & Mid(sqlStr, pos + 1)
            End If
        Next i
    End If
    
    Connect
    
    cmd.CommandType = adCmdText
    cmd.CommandText = sqlStr
    
    Set cmd.ActiveConnection = mConn
    
    
    mLastSQL = sqlStr

    cmd.Execute
    
    Set cmd.ActiveConnection = Nothing
    Set cmd = Nothing

    
End Sub

Public Function ExecuteScalar(ByVal sqlStr As String, ParamArray paras() As Variant) As Variant
    Dim i As Integer
    Dim pos As Long
    
    Dim rs As New ADOdb.Recordset
    
    rs.CursorLocation = adUseClient
    
    If InStr(1, UCase(sqlStr), " TOP ") < 1 Then
            sqlStr = "SELECT TOP 1 " & Mid(sqlStr, InStr(1, UCase(sqlStr), "SELECT") + 6)
    End If
    
' used for 400 query
'    If InStr(UCase(sqlStr), "FETCH FIRST") < 1 Then
'        sqlStr = sqlStr & vbCrLf & " FETCH FIRST 1 ROWS ONLY "
'    End If
        
'    If InStr(UCase(sqlStr), "OPTIMIZE FOR") < 1 Then
'        sqlStr = sqlStr & vbCrLf & " OPTIMIZE FOR 1 ROWS "
'    End If
    
    
    pos = 0
        
    If IsArray(paras) Then
        For i = 0 To UBound(paras)
            pos = InStr(pos + 1, sqlStr, "?")
            
            If pos > 0 Then
                sqlStr = Left(sqlStr, pos - 1) & Replace(paras(i), "'", "''") & Mid(sqlStr, pos + 1)
            End If
        Next i
    End If
    
    
    Connect
    
    mLastSQL = sqlStr
    
    rs.Open sqlStr, mConn
    
    If Not rs.EOF Then
        If IsNull(rs.Fields(0).Value) Then
            ExecuteScalar = ""
        Else
            ExecuteScalar = rs.Fields(0).Value
        End If
    End If
    
    rs.Close
    Set rs = Nothing
    
End Function


Public Function List(ByVal sqlStr As String, ParamArray paras() As Variant) As String
    Dim i As Integer
    Dim pos As Long
    
    Dim rs As New ADOdb.Recordset
    
    rs.CursorLocation = adUseClient
    
'    If InStr(1, UCase(sqlStr), " TOP ") < 1 Then
'            sqlStr = "SELECT TOP 1 " & Mid(sqlStr, InStr(1, UCase(sqlStr), "SELECT") + 6)
'    End If
    
    pos = 0
        
    If IsArray(paras) Then
        For i = 0 To UBound(paras)
            pos = InStr(pos + 1, sqlStr, "?")
            
            If pos > 0 Then
                sqlStr = Left(sqlStr, pos - 1) & Replace(paras(i), "'", "''") & Mid(sqlStr, pos + 1)
            End If
        Next i
    End If
    
    
    Connect
    
    mLastSQL = sqlStr
    
    rs.Open sqlStr, mConn
    
    List = ""
    
    Do While Not rs.EOF
        If Not IsNull(rs.Fields(0).Value) Then
            List = List & "," & rs.Fields(0).Value
        End If
        
        rs.MoveNext
    Loop
    
    rs.Close
    Set rs = Nothing
    
    
    If List <> "" Then
        List = Mid(List, 2)
    End If
    
End Function


Private Sub Class_Initialize()
    'mPWD = "tradeorder"
    'mFILE = "K:\Temp\ORSOTOE-Main.mdb"
    
    mTransStart = False
    
    mCurrentUser = Space(100)
    Call GetUserName(mCurrentUser, Len(mCurrentUser))
    mCurrentUser = Trim(Replace(mCurrentUser, Chr(0), " "))
    
    
End Sub

Private Sub Class_Terminate()
    CloseConnection
End Sub

Public Function fieldExists(ByVal rs As Recordset, ByVal fieldName As String) As Boolean

    On Error GoTo fieldExistsError

    fieldExists = rs.Fields(fieldName).Name <> ""
    Exit Function

fieldExistsError:
    fieldExists = False

End Function

'20170724 v1.1 Freddie Y F Chan [START]
Public Function tableExists(ByVal tableName As String) As Boolean

    On Error GoTo tableExistsError

        Dim cmd As New ADOdb.Command

        Connect

        cmd.CommandType = adCmdText
        cmd.CommandText = "Select top 1 * from [" & tableName & "]"

        Set cmd.ActiveConnection = mConn

        cmd.Execute

        tableExists = True
        GoTo finally

tableExistsError:
    tableExists = False

finally:

        Set cmd.ActiveConnection = Nothing
        Set cmd = Nothing

End Function
'20170724 v1.1 Freddie Y F Chan [END]

