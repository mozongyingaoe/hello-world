_Workflow_Process.bas
Attribute VB_Name = "_Workflow_Process"
Option Compare Database
Option Explicit
 
Public Function Workflow_Process_PostComboBoxChange() As Boolean
    
    Dim mRS_Logic_Config As Recordset
    
On Error GoTo processLogicError
    
    G_DB.GetRecordset "Select * from [Workflow_Logic] where [processType] = 'P' and [subProcess] = '" & mCurrentSubProcess & "' and [SourceFileID] = 'PostComboBoxChange' order by [SEQ]", mRS_Logic_Config

    Do Until mRS_Logic_Config.EOF
        
        If processLogicType(mRS_Logic_Config) = False Then
            GoTo processLogicError
        End If
        
        mRS_Logic_Config.MoveNext
    Loop

    Workflow_Process_PostComboBoxChange = True

finally:

    G_DB.ResetRecordset mRS_Logic_Config
    
    Exit Function
    
processLogicError:

    Workflow_Process_PostComboBoxChange = False
    GoTo finally
    
End Function

Public Function Workflow_Process_ReImport() As Boolean
    
    Dim mRS_Logic_Config As Recordset
    
On Error GoTo processLogicError
    
    G_DB.GetRecordset "Select * from [Workflow_Logic] where [processType] = 'P' and [subProcess] = '" & mCurrentSubProcess & "' and [SourceFileID] = 'ReImport' order by [SEQ]", mRS_Logic_Config

    Do Until mRS_Logic_Config.EOF
        
        If processLogicType(mRS_Logic_Config) = False Then
            GoTo processLogicError
        End If
        
        mRS_Logic_Config.MoveNext
    Loop

    Workflow_Process_ReImport = True

finally:

    G_DB.ResetRecordset mRS_Logic_Config
    
    Exit Function
    
processLogicError:

    Workflow_Process_ReImport = False
    GoTo finally
    
End Function
    
Public Function Workflow_Process_ExecuteTask() As Boolean
    
    Dim tempCount As Integer
    
    Dim mRS_Import_Config As Recordset
    Dim mRS_Logic_Config As Recordset
    
On Error GoTo processLogicError
   
    
    '********* Logic for PreLogic
    G_DB.GetRecordset "Select * from [Workflow_Logic] where [processType] = 'P' and [subProcess] = '" & mCurrentSubProcess & "' and [SourceFileID] = 'PreLogic' order by [SEQ]", mRS_Logic_Config

    Do Until mRS_Logic_Config.EOF
        
        If processLogicType(mRS_Logic_Config) = False Then
            GoTo processLogicError
        End If
        
        mRS_Logic_Config.MoveNext
    Loop
    
    
    '********* Logic for SourceFileID
    G_DB.GetRecordset ("SELECT [SourceFileID], IIf(InStr([sourceType],'_link')>0,[ToPhysicalTable],[DestinationTable]) AS [SourceTbl], Min([Seq]) AS mSeq FROM [_Import_File] GROUP BY [SourceFileID], IIf(InStr([sourceType],'_link')>0,[ToPhysicalTable],[DestinationTable]), [Process] HAVING [Process]='" & mCurrentSubProcess & "' ORDER BY Min([Seq])"), mRS_Import_Config
   
    Do Until mRS_Import_Config.EOF
    
    tempCount = 0
        
    If Not IsNull(mRS_Import_Config("SourceTbl")) Then
    
        On Error Resume Next
        tempCount = G_DB.ExecuteScalar("Select count(1) from [" & mRS_Import_Config("SourceTbl") & "]")
        On Error GoTo processLogicError
        
    End If
        
        If tempCount > 0 Then
            
            G_DB.GetRecordset "Select * from [Workflow_Logic] where [processType] = 'P' and [subProcess] = '" & mCurrentSubProcess & "' and [SourceFileID] = '" & mRS_Import_Config("SourceFileID") & "' order by [SEQ]", mRS_Logic_Config

            Do Until mRS_Logic_Config.EOF
                
                If processLogicType(mRS_Logic_Config) = False Then
                    GoTo processLogicError
                End If
                
                mRS_Logic_Config.MoveNext
            Loop
            
        End If
        
        mRS_Import_Config.MoveNext
        
     Loop
            
    '********* Logic for PostLogic
    G_DB.GetRecordset "Select * from [Workflow_Logic] where [processType] = 'P' and [subProcess] = '" & mCurrentSubProcess & "' and [SourceFileID] = 'PostLogic' order by [SEQ]", mRS_Logic_Config

    Do Until mRS_Logic_Config.EOF
        
        If processLogicType(mRS_Logic_Config) = False Then
            GoTo processLogicError
        End If
        
        mRS_Logic_Config.MoveNext
    Loop

    Workflow_Process_ExecuteTask = True

finally:

    G_DB.ResetRecordset mRS_Import_Config
    
    G_DB.ResetRecordset mRS_Logic_Config
    
    Exit Function
    
processLogicError:

    Workflow_Process_ExecuteTask = False
    GoTo finally
    
End Function



