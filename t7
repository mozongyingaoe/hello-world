_Zip_Module.bas
Attribute VB_Name = "_Zip_Module"
Option Compare Database
Option Explicit

Public Sub zipfiles(ByVal itemList As Collection, ByVal outZipFile As String, ByVal killFileAfterZip As Boolean, Optional ByVal isException As Boolean = False)

    Dim oApp As Object
    Dim filePath As Variant
    Dim FileCount As Integer
    Dim itemUniqueList As New Collection

    If itemList.Count = 0 Then
        Exit Sub
    End If
    
On Error Resume Next

    'Construct unique item list for zip operation
    For Each filePath In itemList
        
        If TypeName(filePath) = TypeName(itemUniqueList) Then
        
            'ExcludeFromZip
            If filePath(3) = "FALSE" Then
                If Not itemExistsInCollection(itemUniqueList, filePath(1)) Then
                    itemUniqueList.Add filePath(1)
                End If
            End If
            
            'DeleteAfterZip
            If filePath(4) = "TRUE" And Not isException Then
                Kill filePath(2)
            End If
            
        Else
            If Not itemExistsInCollection(itemUniqueList, filePath) Then
                itemUniqueList.Add filePath
            End If
        End If
    Next
  
    Call NewZip(outZipFile)

    Set oApp = CreateObject("Shell.Application")
    FileCount = 0
        
    For Each filePath In itemUniqueList
    
        If FileIsExists(filePath) Then
            oApp.Namespace((outZipFile)).CopyHere (filePath)
    
            FileCount = FileCount + 1
        
            'Keep script waiting until Compressing is done
                
            Do Until oApp.Namespace((outZipFile)).Items.Count = FileCount
                Sleep (100)
            Loop
        End If
        
        If killFileAfterZip Then
            Kill filePath
        End If
        
    Next
        
On Error GoTo 0

End Sub

Public Sub NewZip(sPath)
    
    If Len(Dir(sPath)) > 0 Then Kill sPath
    Open sPath For Output As #1
    Print #1, Chr$(80) & Chr$(75) & Chr$(5) & Chr$(6) & String(18, 0)
    Close #1
    
End Sub
